<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from anahita_default.xacro          | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<!-- Copyright (c) 2016 The UUV Simulator Authors.
     All rights reserved.

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->
<robot name="anahita" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <!-- Some pretty colors -->
  <material name="blue">
    <color rgba="0.0 0.0 0.8 1.0"/>
  </material>
  <material name="green">
    <color rgba="0.0 0.8 0.0 1.0"/>
  </material>
  <material name="grey">
    <color rgba="0.7 0.7 0.7 1.0"/>
  </material>
  <material name="grey2">
    <color rgba="0.9 0.9 0.9 1.0"/>
  </material>
  <material name="red">
    <color rgba="0.8 0.0 0.0 1.0"/>
  </material>
  <material name="orange">
    <color rgba="1.0 0.5 0.0 1.0"/>
  </material>
  <material name="white">
    <color rgba="1.0 1.0 1.0 1.0"/>
  </material>
  <material name="black">
    <color rgba="0.05 0.05 0.05 1.0"/>
  </material>
  <!-- ROTOR DYNAMICS MACROS -->
  <!-- First order dynamics -->
  <!--
    MACROS FOR CONVERSION FUNCTIONS BETWEEN ROTOR'S ANG. VELOCITY AND
    
 FORCE
  -->
  <!-- THRUSTER MODULE MACROS  -->
  <!--
    Thruster model with first order dynamic model for the rotor dynamics
    and a proportional non-linear steady-state conversion from the rotor's
    angular velocity to output thrust force
  -->
  <!-- base_link according to ROS conventions x forward, z up -->
  <link name="base_link">
    <inertial>
      <mass value="35"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="1.9775" ixy="0.0" ixz="0.0" iyy="6.2783" iyz="0.0" izz="6.5408"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/auviitk/catkin_ws/src/uuv_simulator/anahita_description/meshes/vehicle.STL" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/auviitk/catkin_ws/src/uuv_simulator/anahita_description/meshes/vehicle.STL" scale="1 1 1"/>
      </geometry>
    </collision>
  </link>
  <!-- Set up hydrodynamic plugin given as input parameter -->
  <gazebo>
    <plugin filename="libuuv_underwater_object_ros_plugin.so" name="uuv_plugin">
      <fluid_density>1028.0</fluid_density>
      <flow_velocity_topic>hydrodynamics/current_velocity</flow_velocity_topic>
      <debug>0</debug>
      <link name="base_link">
        <neutrally_buoyant>1</neutrally_buoyant>
        <volume>0.2</volume>
        <box>
          <width>0.5</width>
          <length>0.88</length>
          <height>0.4</height>
        </box>
        <center_of_buoyancy>0.0 0.0 0.05</center_of_buoyancy>
        <hydrodynamic_model>
          <type>fossen</type>
          <!-- Added mass see p.28 in Berg2012 -->
          <added_mass>
                    4 0 0 0 0 0
                    0 1 0 0 0 0
                    0 0 20 0 0 0
                    0 0 0 0.4 0 0
                    0 0 0 0 5 0
                    0 0 0 0 0 2
                </added_mass>
          <!-- Linear damping see p.31 in Berg2012 -->
          <linear_damping>
                    -11.7391 -20 -31.8678 -25 -44.9085 -5
                </linear_damping>
          <!-- Non-linear damping see p.30 in Berg2012 -->
          <quadratic_damping>
                    0 0 0 0 0 0
                </quadratic_damping>
        </hydrodynamic_model>
      </link>
    </plugin>
  </gazebo>
  <!-- optional plugin to test compare Gazebo's returned accelerations
    <gazebo>
      <plugin name="${namespace}_test_plugin" filename="libuuv_accelerations_test_plugin.so">
        <link_name>${namespace}/base_link</link_name>
      </plugin>
    </gazebo> -->
  
  <link name="thruster_0">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/auviitk/catkin_ws/src/uuv_simulator/anahita_description/meshes/prop.dae" scale="0.25 0.25 0.25"/>
      </geometry>
    </visual>
    <collision>
      <!-- todo gazebo needs a collision volume or it will ignore the pose of
           the joint that leads to this link (and assume it to be the identity) -->
      <geometry>
        <cylinder length="0.000001" radius="0.000001"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
  </link>
  <joint name="thruster_0_joint" type="continuous">
    <origin rpy="0 0.00 0" xyz="-0.00295 0.155242 -0.256919"/>
    <axis xyz="1 0 0"/>
    <parent link="base_link"/>
    <child link="thruster_0"/>
  </joint>
  <gazebo>
    <plugin filename="file:///home/auviitk/catkin_ws/devel/libuuv_thruster_ros_plugin.so" name="anahita_0_thruster_model">
      <linkName>thruster_0</linkName>
      <jointName>thruster_0_joint</jointName>
      <thrusterID>0</thrusterID>
      <dynamics>
        <type>FirstOrder</type>
        <timeConstant>0.05</timeConstant>
      </dynamics>
      <conversion>
        <type>Basic</type>
        <rotorConstant>0.00031</rotorConstant>
      </conversion>
    </plugin>
  </gazebo>
  <gazebo reference="thruster_0">
    <selfCollide>false</selfCollide>
  </gazebo> 
  <joint name="thruster_1_joint" type="continuous">
    <origin rpy="0 0.00 0" xyz="-0.00294 -0.223659 -0.256867"/>
    <axis xyz="1 0 0"/>
    <parent link="base_link"/>
    <child link="thruster_1"/>
  </joint>
  <link name="thruster_1">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/auviitk/catkin_ws/src/uuv_simulator/anahita_description/meshes/prop.dae" scale="0.25 0.25 0.25"/>
      </geometry>
    </visual>
    <collision>
      <!-- todo gazebo needs a collision volume or it will ignore the pose of
           the joint that leads to this link (and assume it to be the identity) -->
      <geometry>
        <cylinder length="0.000001" radius="0.000001"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
  </link>
  <gazebo>
    <plugin filename="libuuv_thruster_ros_plugin.so" name="anahita_1_thruster_model">
      <linkName>thruster_1</linkName>
      <jointName>thruster_1_joint</jointName>
      <thrusterID>1</thrusterID>
      <dynamics>
        <type>FirstOrder</type>
        <timeConstant>0.05</timeConstant>
      </dynamics>
      <conversion>
        <type>Basic</type>
        <rotorConstant>0.00031</rotorConstant>
      </conversion>
    </plugin>
  </gazebo>
  <gazebo reference="thruster_1">
    <selfCollide>false</selfCollide>
  </gazebo>
  <joint name="thruster_2_joint" type="continuous">
    <origin rpy="0 0 1.5708" xyz="-0.349097 -0.02119 -0.259973"/>
    <axis xyz="1 0 0"/>
    <parent link="base_link"/>
    <child link="thruster_2"/>
  </joint>
  <link name="thruster_2">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/auviitk/catkin_ws/src/uuv_simulator/anahita_description/meshes/prop.dae" scale="0.25 0.25 0.25"/>
      </geometry>
    </visual>
    <collision>
      <!-- todo  gazebo needs a collision volume or it will ignore the pose of
           the joint that leads to this link (and assume it to be the identity) -->
      <geometry>
        <cylinder length="0.000001" radius="0.000001"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
  </link>
  <gazebo>
    <plugin filename="libuuv_thruster_ros_plugin.so" name="anahita_2_thruster_model">
      <linkName>thruster_2</linkName>
      <jointName>thruster_2_joint</jointName>
      <thrusterID>2</thrusterID>
      <dynamics>
        <type>FirstOrder</type>
        <timeConstant>0.05</timeConstant>
      </dynamics>
      <conversion>
        <type>Basic</type>
        <rotorConstant>0.00031</rotorConstant>
      </conversion>
    </plugin>
  </gazebo>
  <gazebo reference="thruster_2">
    <selfCollide>false</selfCollide>
  </gazebo>
  <joint name="thruster_3_joint" type="continuous">
    <origin rpy="0 0 1.5708" xyz="0.469063 -0.02119 -0.253872"/>
    <axis xyz="1 0 0"/>
    <parent link="base_link"/>
    <child link="thruster_3"/>
  </joint>
  <link name="thruster_3">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/auviitk/catkin_ws/src/uuv_simulator/anahita_description/meshes/prop.dae" scale="0.25 0.25 0.25"/>
      </geometry>
    </visual>
    <collision>
      <!-- todo  gazebo needs a collision volume or it will ignore the pose of
           the joint that leads to this link (and assume it to be the identity) -->
      <geometry>
        <cylinder length="0.000001" radius="0.000001"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
  </link>
  <gazebo>
    <plugin filename="libuuv_thruster_ros_plugin.so" name="anahita_3_thruster_model">
      <linkName>thruster_3</linkName>
      <jointName>thruster_3_joint</jointName>
      <thrusterID>3</thrusterID>
      <dynamics>
        <type>FirstOrder</type>
        <timeConstant>0.05</timeConstant>
      </dynamics>
      <conversion>
        <type>Basic</type>
        <rotorConstant>0.00031</rotorConstant>
      </conversion>
    </plugin>
  </gazebo>
  <gazebo reference="thruster_3">
    <selfCollide>false</selfCollide>
  </gazebo>
  <joint name="thruster_4_joint" type="continuous">
    <origin rpy="0 -1.5708 0" xyz="0.449063 -0.203659 -0.256919"/>
    <axis xyz="1 0 0"/>
    <parent link="base_link"/>
    <child link="thruster_4"/>
  </joint>
  <link name="thruster_4">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/auviitk/catkin_ws/src/uuv_simulator/anahita_description/meshes/prop.dae" scale="0.25 0.25 0.25"/>
      </geometry>
    </visual>
    <collision>
      <!-- todo  gazebo needs a collision volume or it will ignore the pose of
           the joint that leads to this link (and assume it to be the identity) -->
      <geometry>
        <cylinder length="0.000001" radius="0.000001"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
  </link>
  <gazebo>
    <plugin filename="libuuv_thruster_ros_plugin.so" name="anahita_4_thruster_model">
      <linkName>thruster_4</linkName>
      <jointName>thruster_4_joint</jointName>
      <thrusterID>4</thrusterID>
      <dynamics>
        <type>FirstOrder</type>
        <timeConstant>0.05</timeConstant>
      </dynamics>
      <conversion>
        <type>Basic</type>
        <rotorConstant>0.00031</rotorConstant>
      </conversion>
    </plugin>
  </gazebo>
  <gazebo reference="thruster_4">
    <selfCollide>false</selfCollide>
  </gazebo>
  <joint name="thruster_5_joint" type="continuous">
    <origin rpy="0 -1.5708 0" xyz="-0.319097 -0.203659 -0.256919"/>
    <axis xyz="1 0 0"/>
    <parent link="base_link"/>
    <child link="thruster_5"/>
  </joint>
  <link name="thruster_5">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/auviitk/catkin_ws/src/uuv_simulator/anahita_description/meshes/prop.dae" scale="0.25 0.25 0.25"/>
      </geometry>
    </visual>
    <collision>
      <!-- todo  gazebo needs a collision volume or it will ignore the pose of
           the joint that leads to this link (and assume it to be the identity) -->
      <geometry>
        <cylinder length="0.000001" radius="0.000001"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
  </link>
  <gazebo>
    <plugin filename="libuuv_thruster_ros_plugin.so" name="anahita_5_thruster_model">
      <linkName>thruster_5</linkName>
      <jointName>thruster_5_joint</jointName>
      <thrusterID>5</thrusterID>
      <dynamics>
        <type>FirstOrder</type>
        <timeConstant>0.05</timeConstant>
      </dynamics>
      <conversion>
        <type>Basic</type>
        <rotorConstant>0.00031</rotorConstant>
      </conversion>
    </plugin>
  </gazebo>
  <gazebo reference="thruster_5">
    <selfCollide>false</selfCollide>
  </gazebo>
  <joint name="thruster_6_joint" type="continuous">
    <origin rpy="0 -1.5708 0" xyz="-0.319078 0.135242 -0.256919"/>
    <axis xyz="1 0 0"/>
    <parent link="base_link"/>
    <child link="thruster_6"/>
  </joint>
  <link name="thruster_6">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/auviitk/catkin_ws/src/uuv_simulator/anahita_description/meshes/prop.dae" scale="0.25 0.25 0.25"/>
      </geometry>
    </visual>
    <collision>
      <!-- todo  gazebo needs a collision volume or it will ignore the pose of
           the joint that leads to this link (and assume it to be the identity) -->
      <geometry>
        <cylinder length="0.000001" radius="0.000001"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
  </link>
  <gazebo>
    <plugin filename="libuuv_thruster_ros_plugin.so" name="anahita_6_thruster_model">
      <linkName>thruster_6</linkName>
      <jointName>thruster_6_joint</jointName>
      <thrusterID>6</thrusterID>
      <dynamics>
        <type>FirstOrder</type>
        <timeConstant>0.05</timeConstant>
      </dynamics>
      <conversion>
        <type>Basic</type>
        <rotorConstant>0.00031</rotorConstant>
      </conversion>
    </plugin>
  </gazebo>
  <gazebo reference="thruster_6">
    <selfCollide>false</selfCollide>
  </gazebo>
  <joint name="thruster_7_joint" type="continuous">
    <origin rpy=" 0 -1.5708 0" xyz="0.449034 0.135242 -0.256919"/>
    <axis xyz="1 0 0"/>
    <parent link="base_link"/>
    <child link="thruster_7"/>
  </joint>
  <link name="thruster_7">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/auviitk/catkin_ws/src/uuv_simulator/anahita_description/meshes/prop.dae" scale="0.25 0.25 0.25"/>
      </geometry>
    </visual>
    <collision>
      <!-- todo  gazebo needs a collision volume or it will ignore the pose of
           the joint that leads to this link (and assume it to be the identity) -->
      <geometry>
        <cylinder length="0.000001" radius="0.000001"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
  </link>
  <gazebo>
    <plugin filename="libuuv_thruster_ros_plugin.so" name="anahita_7_thruster_model">
      <linkName>thruster_7</linkName>
      <jointName>thruster_7_joint</jointName>
      <thrusterID>7</thrusterID>
      <dynamics>
        <type>FirstOrder</type>
        <timeConstant>0.05</timeConstant>
      </dynamics>
      <conversion>
        <type>Basic</type>
        <rotorConstant>0.00031</rotorConstant>
      </conversion>
    </plugin>
  </gazebo>
  <gazebo reference="thruster_7">
    <selfCollide>false</selfCollide>
  </gazebo>
  <link name="dvl_link">
    <inertial>
      <mass value="0.001"/>
      <!-- [kg] -->
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.000000017" ixy="0" ixz="0" iyy="0.000000017" iyz="0" izz="0.000000017"/>
    </inertial>
    <visual>
      <geometry>
        <mesh filename="file:///home/auviitk/catkin_ws/src/uuv_simulator/uuv_sensor_plugins/uuv_sensor_ros_plugins/meshes/dvl.dae" scale="0.4 0.4 0.4"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder length="1e-06" radius="1e-06"/>
      </geometry>
      <origin rpy="0 1.57079632679 0" xyz="0 0 0"/>
    </collision>
  </link>
  <joint name="dvl_joint" type="revolute">
    <origin rpy="0 1.57079632679 0" xyz="-0.219097 -0.04 -0.312"/>
    <parent link="base_link"/>
    <child link="dvl_link"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
    <axis xyz="1 0 0"/>
  </joint>
  <link name="dvl_sonar0_link">
    <inertial>
      <mass value="0.001"/>
      <!-- [kg] -->
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.000000017" ixy="0" ixz="0" iyy="0.000000017" iyz="0" izz="0.000000017"/>
    </inertial>
    <collision>
      <geometry>
        <cylinder length="1e-06" radius="1e-06"/>
      </geometry>
      <origin rpy="0 1.57079632679 0" xyz="0 0 0"/>
    </collision>
  </link>
  <joint name="dvl_sonar0_joint" type="revolute">
    <origin rpy="0 -0.52 0.0" xyz="0 0 0"/>
    <parent link="dvl_link"/>
    <child link="dvl_sonar0_link"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
    <axis xyz="1 0 0"/>
  </joint>
  <gazebo reference="dvl_sonar0_link">
    <sensor name="dvl_sonar0" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <update_rate>1</update_rate>
      <visualize>false</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>3</samples>
            <resolution>1</resolution>
            <min_angle>-0.03</min_angle>
            <max_angle>0.03</max_angle>
          </horizontal>
          <vertical>
            <samples>3</samples>
            <resolution>1</resolution>
            <min_angle>-0.03</min_angle>
            <max_angle>0.03</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.55</min>
          <max>81</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <plugin filename="libgazebo_ros_range.so" name="dvl_sonar0">
        <gaussianNoise>0.005</gaussianNoise>
        <alwaysOn>true</alwaysOn>
        <updateRate>1</updateRate>
        <topicName>dvl_sonar0</topicName>
        <frameName>dvl_sonar0_link</frameName>
        <fov>0.06</fov>
        <radiation>ultrasound</radiation>
      </plugin>
    </sensor>
  </gazebo>
  <link name="dvl_sonar1_link">
    <inertial>
      <mass value="0.001"/>
      <!-- [kg] -->
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.000000017" ixy="0" ixz="0" iyy="0.000000017" iyz="0" izz="0.000000017"/>
    </inertial>
    <collision>
      <geometry>
        <cylinder length="1e-06" radius="1e-06"/>
      </geometry>
      <origin rpy="0 1.57079632679 0" xyz="0 0 0"/>
    </collision>
  </link>
  <joint name="dvl_sonar1_joint" type="revolute">
    <origin rpy="0 0 0.52" xyz="0 0 0"/>
    <parent link="dvl_link"/>
    <child link="dvl_sonar1_link"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
    <axis xyz="1 0 0"/>
  </joint>
  <gazebo reference="dvl_sonar1_link">
    <sensor name="dvl_sonar1" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <update_rate>1</update_rate>
      <visualize>false</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>3</samples>
            <resolution>1</resolution>
            <min_angle>-0.03</min_angle>
            <max_angle>0.03</max_angle>
          </horizontal>
          <vertical>
            <samples>3</samples>
            <resolution>1</resolution>
            <min_angle>-0.03</min_angle>
            <max_angle>0.03</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.55</min>
          <max>81</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <plugin filename="libgazebo_ros_range.so" name="dvl_sonar1">
        <gaussianNoise>0.005</gaussianNoise>
        <alwaysOn>true</alwaysOn>
        <updateRate>1</updateRate>
        <topicName>dvl_sonar1</topicName>
        <frameName>dvl_sonar1_link</frameName>
        <fov>0.06</fov>
        <radiation>ultrasound</radiation>
      </plugin>
    </sensor>
  </gazebo>
  <link name="dvl_sonar2_link">
    <inertial>
      <mass value="0.001"/>
      <!-- [kg] -->
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.000000017" ixy="0" ixz="0" iyy="0.000000017" iyz="0" izz="0.000000017"/>
    </inertial>
    <collision>
      <geometry>
        <cylinder length="1e-06" radius="1e-06"/>
      </geometry>
      <origin rpy="0 1.57079632679 0" xyz="0 0 0"/>
    </collision>
  </link>
  <joint name="dvl_sonar2_joint" type="revolute">
    <origin rpy="0 0.52 0.0" xyz="0 0 0"/>
    <parent link="dvl_link"/>
    <child link="dvl_sonar2_link"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
    <axis xyz="1 0 0"/>
  </joint>
  <gazebo reference="dvl_sonar2_link">
    <sensor name="dvl_sonar2" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <update_rate>1</update_rate>
      <visualize>false</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>3</samples>
            <resolution>1</resolution>
            <min_angle>-0.03</min_angle>
            <max_angle>0.03</max_angle>
          </horizontal>
          <vertical>
            <samples>3</samples>
            <resolution>1</resolution>
            <min_angle>-0.03</min_angle>
            <max_angle>0.03</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.55</min>
          <max>81</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <plugin filename="libgazebo_ros_range.so" name="dvl_sonar2">
        <gaussianNoise>0.005</gaussianNoise>
        <alwaysOn>true</alwaysOn>
        <updateRate>1</updateRate>
        <topicName>dvl_sonar2</topicName>
        <frameName>dvl_sonar2_link</frameName>
        <fov>0.06</fov>
        <radiation>ultrasound</radiation>
      </plugin>
    </sensor>
  </gazebo>
  <link name="dvl_sonar3_link">
    <inertial>
      <mass value="0.001"/>
      <!-- [kg] -->
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.000000017" ixy="0" ixz="0" iyy="0.000000017" iyz="0" izz="0.000000017"/>
    </inertial>
    <collision>
      <geometry>
        <cylinder length="1e-06" radius="1e-06"/>
      </geometry>
      <origin rpy="0 1.57079632679 0" xyz="0 0 0"/>
    </collision>
  </link>
  <joint name="dvl_sonar3_joint" type="revolute">
    <origin rpy="0 0.0 -0.52" xyz="0 0 0"/>
    <parent link="dvl_link"/>
    <child link="dvl_sonar3_link"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
    <axis xyz="1 0 0"/>
  </joint>
  <gazebo reference="dvl_sonar3_link">
    <sensor name="dvl_sonar3" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <update_rate>1</update_rate>
      <visualize>false</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>3</samples>
            <resolution>1</resolution>
            <min_angle>-0.03</min_angle>
            <max_angle>0.03</max_angle>
          </horizontal>
          <vertical>
            <samples>3</samples>
            <resolution>1</resolution>
            <min_angle>-0.03</min_angle>
            <max_angle>0.03</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.55</min>
          <max>81</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <plugin filename="libgazebo_ros_range.so" name="dvl_sonar3">
        <gaussianNoise>0.005</gaussianNoise>
        <alwaysOn>true</alwaysOn>
        <updateRate>1</updateRate>
        <topicName>dvl_sonar3</topicName>
        <frameName>dvl_sonar3_link</frameName>
        <fov>0.06</fov>
        <radiation>ultrasound</radiation>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo>
    <plugin filename="libuuv_gazebo_ros_dvl_plugin.so" name="libuuv_gazebo_dvl_plugin">
      <robot_namespace>anahita</robot_namespace>
      <!-- (string, required)  ros namespace in which the messages are published -->
      <link_name>dvl_link</link_name>
      <!-- (string, required)  name of the body which holds the IMU sensor -->
      <sensor_topic>dvl</sensor_topic>
      <!-- (string)  name of the sensor output topic and prefix of service names -->
      <update_rate>7</update_rate>
      <!-- Update period [s] -->
      <noise_sigma>0</noise_sigma>
      <!-- std dev of position estimates in x, y, z [m/s] -->
      <noise_amplitude>0</noise_amplitude>
      <enable_gazebo_messages>false</enable_gazebo_messages>
      <enable_local_ned_frame>false</enable_local_ned_frame>
      <static_reference_frame>world</static_reference_frame>
      <!-- Declaring the beams -->
      <beam_link_name_0>dvl_sonar0_link</beam_link_name_0>
      <beam_link_name_1>dvl_sonar1_link</beam_link_name_1>
      <beam_link_name_2>dvl_sonar2_link</beam_link_name_2>
      <beam_link_name_3>dvl_sonar3_link</beam_link_name_3>
      <!-- Declaring the beam output topics -->
      <beam_topic_0>dvl_sonar0</beam_topic_0>
      <beam_topic_1>dvl_sonar1</beam_topic_1>
      <beam_topic_2>dvl_sonar2</beam_topic_2>
      <beam_topic_3>dvl_sonar3</beam_topic_3>
    </plugin>
  </gazebo>
  <link name="pressure_link">
    <inertial>
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001"/>
      <mass value="0.015"/>
      <!-- [kg] -->
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </inertial>
    <visual>
      <geometry>
        <mesh filename="file:///home/auviitk/catkin_ws/src/uuv_simulator/uuv_sensor_plugins/uuv_sensor_ros_plugins/meshes/pressure.dae" scale="0.25 0.25 0.25"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder length="1e-06" radius="1e-06"/>
      </geometry>
      <origin rpy="0 1.57079632679 0" xyz="0 0 0"/>
    </collision>
  </link>
  <joint name="pressure_joint" type="revolute">
    <origin rpy="0 0 0" xyz="0 0 -0.370"/>
    <parent link="base_link"/>
    <child link="pressure_link"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
    <axis xyz="1 0 0"/>
  </joint>
  <gazebo>
    <plugin filename="libuuv_gazebo_ros_subsea_pressure_plugin.so" name="libuuv_gazebo_subseapressure_plugin">
      <robot_namespace>anahita</robot_namespace>
      <!-- (string, required)  ros namespace in which the messages are published -->
      <link_name>pressure_link</link_name>
      <!-- (string, required) name of the body which holds the IMU sensor -->
      <sensor_topic>pressure</sensor_topic>
      <!-- (string)  name of the sensor output topic and prefix of service names (defaults to imu) -->
      <update_rate>10</update_rate>
      <!-- Update period of accelerometer and gyroscope [s] -->
      <saturation>30000</saturation>
      <!-- measurement range [kPa] -->
      <noise_sigma>3.0</noise_sigma>
      <!-- measurement stddev [kPa] -->
      <noise_amplitude>0.0</noise_amplitude>
      <estimate_depth_on>false</estimate_depth_on>
      <!-- infer depth? -->
      <standard_pressure>101.325</standard_pressure>
      <!-- pressure at sea level (depth 0 m) [kPa] -->
      <kPa_per_meter>9.80638</kPa_per_meter>
      <!-- increase in pressure [kPa] per [m] in increased depth -->
      <enable_gazebo_messages>false</enable_gazebo_messages>
    </plugin>
  </gazebo>
  <!-- IMU link -->
  <link name="imu_link">
    <inertial>
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001"/>
      <mass value="0.015"/>
      <!-- [kg] -->
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </inertial>
  </link>
  <!-- IMU joint -->
  <joint name="imu_joint" type="revolute">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="base_link"/>
    <child link="imu_link"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
    <axis xyz="1 0 0"/>
  </joint>
  <gazebo>
    <plugin filename="libuuv_gazebo_ros_imu_plugin.so" name="libuuv_gazebo_imu_plugin">
      <!-- A good description of the IMU parameters can be found in the kalibr documentation 
           https //github.com/ethz-asl/kalibr/wiki/IMU-Noise-Model-and-Intrinsics -->
      <robot_namespace>anahita</robot_namespace>
      <!-- (string, required) ros namespace in which the messages are published -->
      <link_name>imu_link</link_name>
      <!-- (string, required)  name of the body which holds the IMU sensor -->
      <sensor_topic>imu</sensor_topic>
      <!-- (string) name of the sensor output topic and prefix of service names (defaults to imu) -->
      <gyroscope_noise_density>0.0003394</gyroscope_noise_density>
      <!-- Gyroscope noise density (two-sided spectrum) [rad/s/sqrt(Hz)] -->
      <gyroscope_random_walk>3.8785e-05</gyroscope_random_walk>
      <!-- Gyroscope bias random walk [rad/s/s/sqrt(Hz)] -->
      <gyroscope_bias_correlation_time>1000.0</gyroscope_bias_correlation_time>
      <!-- Gyroscope bias correlation time constant [s] -->
      <gyroscope_turn_on_bias_sigma>0.0087</gyroscope_turn_on_bias_sigma>
      <!-- Gyroscope turn on bias standard deviation [rad/s] -->
      <accelerometer_noise_density>0.004</accelerometer_noise_density>
      <!-- Accelerometer noise density (two-sided spectrum) [m/s^2/sqrt(Hz)] -->
      <accelerometer_random_walk>0.006</accelerometer_random_walk>
      <!-- Accelerometer bias random walk. [m/s^2/s/sqrt(Hz)] -->
      <accelerometer_bias_correlation_time>300.0</accelerometer_bias_correlation_time>
      <!-- Accelerometer bias correlation time constant [s] -->
      <accelerometer_turn_on_bias_sigma>0.196</accelerometer_turn_on_bias_sigma>
      <!-- Accelerometer turn on bias standard deviation [m/s^2] -->
      <orientation_noise>0.01</orientation_noise>
      <update_rate>50</update_rate>
      <!-- Update period of accelerometer and gyroscope [s] -->
      <enable_gazebo_messages>false</enable_gazebo_messages>
      <enable_local_ned_frame>false</enable_local_ned_frame>
      <static_reference_frame>world</static_reference_frame>
    </plugin>
  </gazebo>
  <link name="duo3d_left_link">
    <inertial>
      <mass value="0.01"/>
      <inertia ixx="0" ixy="0.0" ixz="0.0" iyy="0" iyz="0.0" izz="0"/>
    </inertial>
    <visual>
      <geometry>
        <mesh filename="file:///home/auviitk/catkin_ws/src/uuv_simulator/uuv_sensor_plugins/uuv_sensor_ros_plugins/meshes/duo3d.dae"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder length="1e-06" radius="1e-06"/>
      </geometry>
      <origin rpy="0 1.57079632679 0" xyz="0 0 0"/>
    </collision>
  </link>
  <joint name="duo3d_joint" type="revolute">
    <origin rpy="0 0 0" xyz="0.459063 -0.02119 -0.1124"/>
    <parent link="base_link"/>
    <child link="duo3d_left_link"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
    <axis xyz="1 0 0"/>
  </joint>
  <gazebo reference="duo3d_left_link">
    <sensor name="camera" type="camera">
      <camera>
        <horizontal_fov>1.512198</horizontal_fov>
        <image>
          <width>768</width>
          <height>492</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>5000</far>
        </clip>
        <distortion>
          <k1>-0.389021</k1>
          <k2>0.118184</k2>
          <k3>0.0</k3>
          <p1>0.001259</p1>
          <p2>0.00205</p2>
          <center>0.5 0.5</center>
        </distortion>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="left_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>30.0</updateRate>
        <cameraName>left</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>duo3d_left_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>-0.389021</distortionK1>
        <distortionK2>0.118184</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.001259</distortionT1>
        <distortionT2>0.00205</distortionT2>
      </plugin>
      <always_on>1</always_on>
      <update_rate>30</update_rate>
      <visualize>true</visualize>
    </sensor>
  </gazebo>
  <link name="duo3d_right_link">
    <inertial>
      <mass value="0.01"/>
      <inertia ixx="0" ixy="0.0" ixz="0.0" iyy="0" iyz="0.0" izz="0"/>
    </inertial>
    <collision>
      <geometry>
        <cylinder length="1e-06" radius="1e-06"/>
      </geometry>
      <origin rpy="0 1.57079632679 0" xyz="0 0 0"/>
    </collision>
  </link>
  <joint name="duo3d_right_joint" type="revolute">
    <origin rpy="0 0 0" xyz="0.0 -0.03 0"/>
    <parent link="duo3d_left_link"/>
    <child link="duo3d_right_link"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
    <axis xyz="1 0 0"/>
  </joint>
  <gazebo reference="duo3d_right_link">
    <sensor name="camera" type="camera">
      <camera>
        <horizontal_fov>1.512198</horizontal_fov>
        <image>
          <width>768</width>
          <height>492</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>5000</far>
        </clip>
        <distortion>
          <k1>-0.389021</k1>
          <k2>0.118184</k2>
          <k3>0.0</k3>
          <p1>0.001259</p1>
          <p2>0.00205</p2>
          <center>0.5 0.5</center>
        </distortion>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="right_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>30.0</updateRate>
        <cameraName>right</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>duo3d_right_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>-0.389021</distortionK1>
        <distortionK2>0.118184</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.001259</distortionT1>
        <distortionT2>0.00205</distortionT2>
      </plugin>
      <always_on>1</always_on>
      <update_rate>30</update_rate>
      <visualize>true</visualize>
    </sensor>
  </gazebo>
  <!-- Sensor link -->
  <link name="camerafront_link">
    <inertial>
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001"/>
      <mass value="0.1"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </inertial>
    <visual>
      <geometry>
        <mesh filename="file:///home/auviitk/catkin_ws/src/uuv_simulator/uuv_sensor_plugins/uuv_sensor_ros_plugins/meshes/oe14-372.dae" scale="1.0 1.0 1.0"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder length="1e-06" radius="1e-06"/>
      </geometry>
      <origin rpy="0 1.57079632679 0" xyz="0 0 0"/>
    </collision>
  </link>
  <joint name="camerafront_joint" type="revolute">
    <origin rpy="0 0 0" xyz="0.459063 -0.02119 -0.1724"/>
    <parent link="base_link"/>
    <child link="camerafront_link"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
    <axis xyz="1 0 0"/>
  </joint>
  <link name="camerafront_link_optical">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="1.666666e-12" ixy="0.0" ixz="0.0" iyy="1.666666e-12" iyz="0.0" izz="1.666666e-12"/>
    </inertial>
    <collision>
      <!-- todo  gazebo needs a collision volume or it will ignore the pose of
           the joint that leads to this link (and assume it to be the identity) -->
      <geometry>
        <cylinder length="0.000001" radius="0.000001"/>
      </geometry>
      <origin rpy="0 1.57079632679 0" xyz="0 0 0"/>
    </collision>
  </link>
  <joint name="camerafront_optical_joint" type="revolute">
    <origin rpy="-1.57079632679 0 -1.57079632679" xyz="0 0 0"/>
    <parent link="camerafront_link"/>
    <child link="camerafront_link_optical"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
    <axis xyz="1 0 0"/>
  </joint>
  <gazebo reference="camerafront_link">
    <sensor name="camerafront" type="camera">
      <update_rate>30</update_rate>
      <camera name="camerafront">
        <horizontal_fov>1.5125</horizontal_fov>
        <image>
          <width>768</width>
          <height>492</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>3000</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.02</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camerafront_controller">
        <updateRate>30</updateRate>
        <cameraName>camerafront</cameraName>
        <frameName>camerafront_link_optical</frameName>
        <attenuationR>0.0</attenuationR>
        <attenuationG>0.0</attenuationG>
        <attenuationB>0.0</attenuationB>
        <backgroundR>0</backgroundR>
        <backgroundG>0</backgroundG>
        <backgroundB>0</backgroundB>
        <!-- required for ros depth cam -->
        <imageTopicName>camera_image</imageTopicName>
        <pointCloudTopicName>camera_cloud</pointCloudTopicName>
        <depthImageTopicName>camera_depth</depthImageTopicName>
        <depthImageCameraInfoTopicName>camera_depth_info</depthImageCameraInfoTopicName>
        <pointCloudCutoff>10.0</pointCloudCutoff>
      </plugin>
    </sensor>
  </gazebo>
  <!-- Sensor link -->
  <link name="camerabottom_link">
    <inertial>
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001"/>
      <mass value="0.1"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </inertial>
    <visual>
      <geometry>
        <mesh filename="file:///home/auviitk/catkin_ws/src/uuv_simulator/uuv_sensor_plugins/uuv_sensor_ros_plugins/meshes/oe14-372.dae" scale="1.0 1.0 1.0"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder length="1e-06" radius="1e-06"/>
      </geometry>
      <origin rpy="0 1.57079632679 0" xyz="0 0 0"/>
    </collision>
  </link>
  <joint name="camerabottom_joint" type="revolute">
    <origin rpy="0 1.5714285714 0" xyz="0.049983 -0.02119 -0.379224"/>
    <parent link="base_link"/>
    <child link="camerabottom_link"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
    <axis xyz="1 0 0"/>
  </joint>
  <link name="camerabottom_link_optical">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="1.666666e-12" ixy="0.0" ixz="0.0" iyy="1.666666e-12" iyz="0.0" izz="1.666666e-12"/>
    </inertial>
    <collision>
      <!-- todo  gazebo needs a collision volume or it will ignore the pose of
           the joint that leads to this link (and assume it to be the identity) -->
      <geometry>
        <cylinder length="0.000001" radius="0.000001"/>
      </geometry>
      <origin rpy="0 1.57079632679 0" xyz="0 0 0"/>
    </collision>
  </link>
  <joint name="camerabottom_optical_joint" type="revolute">
    <origin rpy="-1.57079632679 0 -1.57079632679" xyz="0 0 0"/>
    <parent link="camerabottom_link"/>
    <child link="camerabottom_link_optical"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
    <axis xyz="1 0 0"/>
  </joint>
  <gazebo reference="camerabottom_link">
    <sensor name="camerabottom" type="camera">
      <update_rate>30</update_rate>
      <camera name="camerabottom">
        <horizontal_fov>1.5125</horizontal_fov>
        <image>
          <width>768</width>
          <height>492</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>3000</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.02</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camerabottom_controller">
        <updateRate>30</updateRate>
        <cameraName>camerabottom</cameraName>
        <frameName>camerabottom_link_optical</frameName>
        <attenuationR>0.0</attenuationR>
        <attenuationG>0.0</attenuationG>
        <attenuationB>0.0</attenuationB>
        <backgroundR>0</backgroundR>
        <backgroundG>0</backgroundG>
        <backgroundB>0</backgroundB>
        <!-- required for ros depth cam -->
        <imageTopicName>camera_image</imageTopicName>
        <pointCloudTopicName>camera_cloud</pointCloudTopicName>
        <depthImageTopicName>camera_depth</depthImageTopicName>
        <depthImageCameraInfoTopicName>camera_depth_info</depthImageCameraInfoTopicName>
        <pointCloudCutoff>10.0</pointCloudCutoff>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo>
    <plugin filename="libuuv_joint_state_publisher.so" name="uuv_joint_state_publisher">
      <robotNamespace>anahita</robotNamespace>
      <updateRate>50</updateRate>
    </plugin>
  </gazebo>
</robot>

