;; Auto-generated. Do not edit!


(when (boundp 'motion_layer::rollPIDResult)
  (if (not (find-package "MOTION_LAYER"))
    (make-package "MOTION_LAYER"))
  (shadow 'rollPIDResult (find-package "MOTION_LAYER")))
(unless (find-package "MOTION_LAYER::ROLLPIDRESULT")
  (make-package "MOTION_LAYER::ROLLPIDRESULT"))

(in-package "ROS")
;;//! \htmlinclude rollPIDResult.msg.html


(defclass motion_layer::rollPIDResult
  :super ros::object
  :slots (_final_roll ))

(defmethod motion_layer::rollPIDResult
  (:init
   (&key
    ((:final_roll __final_roll) 0.0)
    )
   (send-super :init)
   (setq _final_roll (float __final_roll))
   self)
  (:final_roll
   (&optional __final_roll)
   (if __final_roll (setq _final_roll __final_roll)) _final_roll)
  (:serialization-length
   ()
   (+
    ;; float32 _final_roll
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; float32 _final_roll
       (sys::poke _final_roll (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; float32 _final_roll
     (setq _final_roll (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get motion_layer::rollPIDResult :md5sum-) "4cd57ac3ec9ec5136175152d30d31d48")
(setf (get motion_layer::rollPIDResult :datatype-) "motion_layer/rollPIDResult")
(setf (get motion_layer::rollPIDResult :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
#result definition
float32 final_roll

")



(provide :motion_layer/rollPIDResult "4cd57ac3ec9ec5136175152d30d31d48")


